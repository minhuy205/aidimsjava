"use client"

import { memo, useState, useEffect } from "react"
import Layout from "../Layout/Layout"
import "../../css/PatientProfile.css"

const PatientProfile = () => {
  const [patients, setPatients] = useState([])
  const [selectedPatient, setSelectedPatient] = useState(null)
  const [showModal, setShowModal] = useState(false)
  const [activeTab, setActiveTab] = useState("general")

  // Load patients from database
  useEffect(() => {
    // Simulate API call to get patients
    const mockPatients = [
      {
        id: "BN001",
        patientCode: "BN001",
        fullName: "Nguy·ªÖn VƒÉn Nam",
        dateOfBirth: "1985-03-15",
        gender: "Nam",
        phone: "0912345678",
        email: "nvnam@email.com",
        address: "123 Nguy·ªÖn Hu·ªá, Q.1, TP.HCM",
        identityNumber: "123456789",
        insuranceNumber: "SV123456789",
        bloodType: "A+",
        allergies: "Kh√¥ng c√≥",
        medicalHistory: "Ti·ªÅn s·ª≠ cao huy·∫øt √°p",
        chiefComplaint: "ƒêau ng·ª±c, kh√≥ th·ªü khi g·∫Øng s·ª©c",
        vitalSigns: {
          temperature: 36.5,
          bloodPressure: "140/90",
          heartRate: 85,
          respiratoryRate: 18,
          oxygenSaturation: 97,
        },
        specialty: "Tim m·∫°ch",
        status: "Ch·ªù ch·ª•p",
        priority: "B√¨nh th∆∞·ªùng",
        visitDate: "2024-12-15",
      },
      {
        id: "BN002",
        patientCode: "BN002",
        fullName: "Tr·∫ßn Th·ªã Hoa",
        dateOfBirth: "1990-07-22",
        gender: "N·ªØ",
        phone: "0923456789",
        email: "tthoa@email.com",
        address: "456 L√™ L·ª£i, Q.3, TP.HCM",
        identityNumber: "987654321",
        insuranceNumber: "SV987654321",
        bloodType: "B+",
        allergies: "D·ªã ·ª©ng penicillin",
        medicalHistory: "Kh√¥ng c√≥ ti·ªÅn s·ª≠ b·ªánh l√Ω",
        chiefComplaint: "Ho khan k√©o d√†i, s·ªët nh·∫π",
        vitalSigns: {
          temperature: 37.2,
          bloodPressure: "120/80",
          heartRate: 78,
          respiratoryRate: 20,
          oxygenSaturation: 98,
        },
        specialty: "H√¥ h·∫•p",
        status: "Ch·ªù ch·ª•p",
        priority: "B√¨nh th∆∞·ªùng",
        visitDate: "2024-12-16",
      },
      {
        id: "BN003",
        patientCode: "BN003",
        fullName: "L√™ Minh Tu·∫•n",
        dateOfBirth: "1978-11-08",
        gender: "Nam",
        phone: "0934567890",
        email: "lmtuan@email.com",
        address: "789 Hai B√† Tr∆∞ng, Q.1, TP.HCM",
        identityNumber: "456789123",
        insuranceNumber: "SV456789123",
        bloodType: "O+",
        allergies: "Kh√¥ng c√≥",
        medicalHistory: "Ti·ªÅn s·ª≠ ƒëau ƒë·∫ßu m√£n t√≠nh",
        chiefComplaint: "ƒêau ƒë·∫ßu d·ªØ d·ªôi, bu·ªìn n√¥n",
        vitalSigns: {
          temperature: 36.8,
          bloodPressure: "160/100",
          heartRate: 92,
          respiratoryRate: 16,
          oxygenSaturation: 99,
        },
        specialty: "Th·∫ßn kinh",
        status: "Kh·∫©n c·∫•p",
        priority: "Kh·∫©n c·∫•p",
        visitDate: "2024-12-17",
      },
    ]
    setPatients(mockPatients)
  }, [])

  const handlePatientClick = (patient) => {
    setSelectedPatient(patient)
    setShowModal(true)
  }

  const closeModal = () => {
    setShowModal(false)
    setSelectedPatient(null)
    setActiveTab("general")
  }

  const calculateAge = (dateOfBirth) => {
    const today = new Date()
    const birthDate = new Date(dateOfBirth)
    let age = today.getFullYear() - birthDate.getFullYear()
    const monthDiff = today.getMonth() - birthDate.getMonth()
    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {
      age--
    }
    return age
  }

  const getPriorityColor = (priority) => {
    switch (priority) {
      case "Kh·∫©n c·∫•p":
        return "#dc3545"
      case "∆Øu ti√™n":
        return "#fd7e14"
      default:
        return "#28a745"
    }
  }

  return (
    <Layout>
      <div className="doctor-page">
        <div className="patient-list-container">
          <div className="page-header">
            <h2>üìã Danh s√°ch b·ªánh nh√¢n</h2>
            <p>Qu·∫£n l√Ω v√† xem th√¥ng tin chi ti·∫øt h·ªì s∆° b·ªánh nh√¢n</p>
          </div>

          <div className="patient-stats">
            <div className="stat-card">
              <div className="stat-number">{patients.length}</div>
              <div className="stat-label">T·ªïng b·ªánh nh√¢n</div>
            </div>
            <div className="stat-card">
              <div className="stat-number">{patients.filter((p) => p.priority === "Kh·∫©n c·∫•p").length}</div>
              <div className="stat-label">Kh·∫©n c·∫•p</div>
            </div>
            <div className="stat-card">
              <div className="stat-number">{patients.filter((p) => p.status === "Ch·ªù ch·ª•p").length}</div>
              <div className="stat-label">Ch·ªù ch·ª•p</div>
            </div>
          </div>

          <div className="table-container">
            <table className="patient-table">
              <thead>
                <tr>
                  <th>M√£ BN</th>
                  <th>H·ªç v√† t√™n</th>
                  <th>Tu·ªïi</th>
                  <th>Gi·ªõi t√≠nh</th>
                  <th>Chuy√™n khoa</th>
                  <th>Tri·ªáu ch·ª©ng ch√≠nh</th>
                  <th>M·ª©c ƒë·ªô ∆∞u ti√™n</th>
                  <th>Tr·∫°ng th√°i</th>
                </tr>
              </thead>
              <tbody>
                {patients.map((patient) => (
                  <tr key={patient.id} onClick={() => handlePatientClick(patient)} className="patient-row">
                    <td>{patient.patientCode}</td>
                    <td className="patient-name">{patient.fullName}</td>
                    <td>{calculateAge(patient.dateOfBirth)}</td>
                    <td>{patient.gender}</td>
                    <td>{patient.specialty}</td>
                    <td className="chief-complaint">{patient.chiefComplaint}</td>
                    <td>
                      <span className="priority-badge" style={{ backgroundColor: getPriorityColor(patient.priority) }}>
                        {patient.priority}
                      </span>
                    </td>
                    <td>
                      <span className="status-badge">{patient.status}</span>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        {/* Medical Record Modal */}
        {showModal && selectedPatient && (
          <div className="modal-overlay" onClick={closeModal}>
            <div className="medical-record-modal" onClick={(e) => e.stopPropagation()}>
              <div className="modal-header">
                <button className="close-btn" onClick={closeModal}>
                  √ó
                </button>
                <h3>üè• H·ªí S∆† B·ªÜNH √ÅN</h3>
                <p>M√£ b·ªánh nh√¢n: {selectedPatient.patientCode}</p>
              </div>

              <div className="modal-tabs">
                <div
                  className={`tab-item ${activeTab === "general" ? "active" : ""}`}
                  onClick={() => setActiveTab("general")}
                >
                  <div className="tab-icon">üë§</div>
                  <span>Th√¥ng tin chung</span>
                </div>
                <div
                  className={`tab-item ${activeTab === "medical" ? "active" : ""}`}
                  onClick={() => setActiveTab("medical")}
                >
                  <div className="tab-icon">ü©∫</div>
                  <span>Th√¥ng tin y t·∫ø</span>
                </div>
                <div
                  className={`tab-item ${activeTab === "vital" ? "active" : ""}`}
                  onClick={() => setActiveTab("vital")}
                >
                  <div className="tab-icon">üìä</div>
                  <span>Sinh hi·ªáu</span>
                </div>
              </div>

              <div className="modal-content">
                {activeTab === "general" && (
                  <div className="patient-info-section">
                    <h4>üìã TH√îNG TIN B·ªÜNH NH√ÇN</h4>

                    <div className="info-grid">
                      <div className="info-row">
                        <span className="info-label">H·ªç v√† t√™n:</span>
                        <span className="info-value">{selectedPatient.fullName}</span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">Ng√†y sinh:</span>
                        <span className="info-value">{selectedPatient.dateOfBirth}</span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">Tu·ªïi:</span>
                        <span className="info-value">{calculateAge(selectedPatient.dateOfBirth)} tu·ªïi</span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">Gi·ªõi t√≠nh:</span>
                        <span className="info-value">{selectedPatient.gender}</span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">S·ªë ƒëi·ªán tho·∫°i:</span>
                        <span className="info-value">{selectedPatient.phone}</span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">Email:</span>
                        <span className="info-value">{selectedPatient.email}</span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">ƒê·ªãa ch·ªâ:</span>
                        <span className="info-value">{selectedPatient.address}</span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">CMND/CCCD:</span>
                        <span className="info-value">{selectedPatient.identityNumber}</span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">S·ªë BHYT:</span>
                        <span className="info-value">{selectedPatient.insuranceNumber}</span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">Nh√≥m m√°u:</span>
                        <span className="info-value">{selectedPatient.bloodType}</span>
                      </div>
                    </div>
                  </div>
                )}

                {activeTab === "medical" && (
                  <div className="patient-info-section">
                    <h4>ü©∫ TH√îNG TIN Y T·∫æ</h4>

                    <div className="info-grid">
                      <div className="info-row">
                        <span className="info-label">Tri·ªáu ch·ª©ng ch√≠nh:</span>
                        <span className="info-value">{selectedPatient.chiefComplaint}</span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">Ti·ªÅn s·ª≠ b·ªánh:</span>
                        <span className="info-value">{selectedPatient.medicalHistory}</span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">D·ªã ·ª©ng:</span>
                        <span className="info-value">{selectedPatient.allergies}</span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">Chuy√™n khoa:</span>
                        <span className="info-value">{selectedPatient.specialty}</span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">M·ª©c ƒë·ªô ∆∞u ti√™n:</span>
                        <span className="info-value">
                          <span
                            className="priority-badge"
                            style={{ backgroundColor: getPriorityColor(selectedPatient.priority) }}
                          >
                            {selectedPatient.priority}
                          </span>
                        </span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">Tr·∫°ng th√°i:</span>
                        <span className="info-value">
                          <span className="status-badge">{selectedPatient.status}</span>
                        </span>
                      </div>

                      <div className="info-row">
                        <span className="info-label">Ng√†y kh√°m:</span>
                        <span className="info-value">{selectedPatient.visitDate}</span>
                      </div>
                    </div>
                  </div>
                )}

                {activeTab === "vital" && (
                  <div className="patient-info-section">
                    <h4>üìä SINH HI·ªÜU</h4>

                    <div className="vital-signs-grid">
                      <div className="vital-card">
                        <div className="vital-icon">üå°Ô∏è</div>
                        <div className="vital-value">{selectedPatient.vitalSigns.temperature}¬∞C</div>
                        <div className="vital-label">Nhi·ªát ƒë·ªô</div>
                      </div>

                      <div className="vital-card">
                        <div className="vital-icon">üíì</div>
                        <div className="vital-value">{selectedPatient.vitalSigns.heartRate}</div>
                        <div className="vital-label">Nh·ªãp tim (l·∫ßn/ph√∫t)</div>
                      </div>

                      <div className="vital-card">
                        <div className="vital-icon">ü©∏</div>
                        <div className="vital-value">{selectedPatient.vitalSigns.bloodPressure}</div>
                        <div className="vital-label">Huy·∫øt √°p (mmHg)</div>
                      </div>

                      <div className="vital-card">
                        <div className="vital-icon">ü´Å</div>
                        <div className="vital-value">{selectedPatient.vitalSigns.respiratoryRate}</div>
                        <div className="vital-label">Nh·ªãp th·ªü (l·∫ßn/ph√∫t)</div>
                      </div>

                      <div className="vital-card">
                        <div className="vital-icon">üîµ</div>
                        <div className="vital-value">{selectedPatient.vitalSigns.oxygenSaturation}%</div>
                        <div className="vital-label">SpO2</div>
                      </div>
                    </div>
                  </div>
                )}

                <div className="modal-actions">
                  <button className="btn btn-primary">üìù T·∫°o y√™u c·∫ßu ch·ª•p</button>
                  <button className="btn btn-secondary">üìÑ Xem b√°o c√°o</button>
                  <button className="btn btn-success">‚úÖ Ho√†n th√†nh kh√°m</button>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </Layout>
  )
}

export default memo(PatientProfile)
